<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Louyp</title>
  
  <subtitle>目光所至，心之所向</subtitle>
  <link href="https://root1761.github.io/atom.xml" rel="self"/>
  
  <link href="https://root1761.github.io/"/>
  <updated>2023-04-14T02:02:17.162Z</updated>
  <id>https://root1761.github.io/</id>
  
  <author>
    <name>Louyp</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>spark基本介绍及使用</title>
    <link href="https://root1761.github.io/2022/08/05/spark%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>https://root1761.github.io/2022/08/05/spark%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2022-08-05T02:09:00.000Z</published>
    <updated>2023-04-14T02:02:17.162Z</updated>
    
    
    
    
    <category term="大数据" scheme="https://root1761.github.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="spark" scheme="https://root1761.github.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/spark/"/>
    
    
    <category term="linux" scheme="https://root1761.github.io/tags/linux/"/>
    
    <category term="spark" scheme="https://root1761.github.io/tags/spark/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://root1761.github.io/2022/08/04/hello-world/"/>
    <id>https://root1761.github.io/2022/08/04/hello-world/</id>
    <published>2022-08-04T01:54:04.354Z</published>
    <updated>2022-08-05T01:18:18.155Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
    <category term="随笔" scheme="https://root1761.github.io/tags/%E9%9A%8F%E7%AC%94/"/>
    
  </entry>
  
  <entry>
    <title>nacos安装及使用</title>
    <link href="https://root1761.github.io/2021/04/06/nacos%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/"/>
    <id>https://root1761.github.io/2021/04/06/nacos%E5%AE%89%E8%A3%85%E5%8F%8A%E4%BD%BF%E7%94%A8/</id>
    <published>2021-04-06T02:20:00.000Z</published>
    <updated>2022-08-05T00:32:12.250Z</updated>
    
    
    
    
    <category term="微服务" scheme="https://root1761.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="nacos" scheme="https://root1761.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/nacos/"/>
    
    
  </entry>
  
  <entry>
    <title>springcloud+spring security oauth2+jwt实现单点登录</title>
    <link href="https://root1761.github.io/2021/01/20/springcloud-spring-security-oauth2-jwt%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/"/>
    <id>https://root1761.github.io/2021/01/20/springcloud-spring-security-oauth2-jwt%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/</id>
    <published>2021-01-20T09:10:00.000Z</published>
    <updated>2022-08-05T02:26:49.307Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、SSO基本介绍"><a href="#一、SSO基本介绍" class="headerlink" title="一、SSO基本介绍"></a>一、SSO基本介绍</h2><p> SSO（Single Sign-On，单点登录）是身份管理中的一部分。SSO的一种较为通俗的定义是：SSO是在多个应用系统中，用户只需要登录一次就可以访问所有相互信任的应用系统。它包括可以将这次主要的登录映射到其他应用中用于同一个用户的登录的机制。它是目前比较流行的企业业务整合的解决方案之一。<br> 相关技术主要有：spring security ，shiro</p><h2 id="二、spring-security-基本实现"><a href="#二、spring-security-基本实现" class="headerlink" title="二、spring security 基本实现"></a>二、spring security 基本实现</h2><p><strong>1.引入pom依赖</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-boot-starter-security&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>2.添加配置文件</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableDiscoveryClient</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SecurityConfig</span> <span class="keyword">extends</span> <span class="title class_">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="type">Logger</span> <span class="variable">logger</span> <span class="operator">=</span> LoggerFactory.getLogger(ActivitiConfig.class);</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        auth.userDetailsService(myUserDetailsService());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> UserDetailsService <span class="title function_">myUserDetailsService</span><span class="params">()</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="type">InMemoryUserDetailsManager</span> <span class="variable">inMemoryUserDetailsManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InMemoryUserDetailsManager</span>();</span><br><span class="line"></span><br><span class="line">        String[][] usersGroupsAndRoles = &#123;</span><br><span class="line">                &#123;<span class="string">&quot;salaboy&quot;</span>, <span class="string">&quot;password&quot;</span>, <span class="string">&quot;ROLE_ACTIVITI_USER&quot;</span>, <span class="string">&quot;GROUP_activitiTeam&quot;</span>,<span class="string">&quot;GROUP_otherTeam&quot;</span>&#125;,</span><br><span class="line"></span><br><span class="line">                &#123;<span class="string">&quot;ryandawsonuk&quot;</span>, <span class="string">&quot;password&quot;</span>, <span class="string">&quot;ROLE_ACTIVITI_USER&quot;</span>, <span class="string">&quot;GROUP_activitiTeam&quot;</span>&#125;,</span><br><span class="line">                &#123;<span class="string">&quot;erdemedeiros&quot;</span>, <span class="string">&quot;password&quot;</span>, <span class="string">&quot;ROLE_ACTIVITI_USER&quot;</span>, <span class="string">&quot;GROUP_activitiTeam&quot;</span>&#125;,</span><br><span class="line">                &#123;<span class="string">&quot;other&quot;</span>, <span class="string">&quot;password&quot;</span>, <span class="string">&quot;ROLE_ACTIVITI_USER&quot;</span>, <span class="string">&quot;GROUP_otherTeam&quot;</span>&#125;,</span><br><span class="line">                &#123;<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;password&quot;</span>, <span class="string">&quot;ROLE_ACTIVITI_ADMIN&quot;</span>&#125;,</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (String[] user : usersGroupsAndRoles) &#123;</span><br><span class="line">            List&lt;String&gt; authoritiesStrings = Arrays.asList(Arrays.copyOfRange(user, <span class="number">2</span>, user.length));</span><br><span class="line">            logger.info(<span class="string">&quot;&gt; Registering new user: &quot;</span> + user[<span class="number">0</span>] + <span class="string">&quot; with the following Authorities[&quot;</span> + authoritiesStrings + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">            inMemoryUserDetailsManager.createUser(<span class="keyword">new</span> <span class="title class_">User</span>(user[<span class="number">0</span>], passwordEncoder().encode(user[<span class="number">1</span>]),</span><br><span class="line">                    authoritiesStrings.stream().map(s -&gt; <span class="keyword">new</span> <span class="title class_">SimpleGrantedAuthority</span>(s)).collect(Collectors.toList())));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> inMemoryUserDetailsManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        http</span><br><span class="line">                .csrf().disable()</span><br><span class="line">                .authorizeRequests()</span><br><span class="line">                .anyRequest()</span><br><span class="line">                .authenticated()</span><br><span class="line">                .and()</span><br><span class="line">                .httpBasic();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> PasswordEncoder <span class="title function_">passwordEncoder</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>启动测试：</p><div style="width:70%;margin:auto"><img src="/2021/01/20/springcloud-spring-security-oauth2-jwt%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/security1.png" class></div><h2 id="三、spring-security-oauth2"><a href="#三、spring-security-oauth2" class="headerlink" title="三、spring security oauth2"></a>三、spring security oauth2</h2><h3 id="1-认证服务"><a href="#1-认证服务" class="headerlink" title="1.认证服务"></a>1.认证服务</h3><p><strong>(1).引入pom依赖</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-oauth2&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>(2).认证方式</strong></p><blockquote><p>授权码模式：authorization_code<br>客户端模式：client_credentials<br>简化模式： implicit<br>密码模式： password</p></blockquote><p><strong>(3).认证服务访问路径</strong></p><blockquote><p>&#x2F;oauth&#x2F;authorize：授权端点。<br>&#x2F;oauth&#x2F;token：令牌端点。<br>&#x2F;oauth&#x2F;confirm_access：用户确认授权提交端点。<br>&#x2F;oauth&#x2F;error：授权服务错误信息端点。<br>&#x2F;oauth&#x2F;check_token：用于资源服务访问的令牌解析端点。<br>&#x2F;oauth&#x2F;token_key：提供公有密匙的端点，如果你使用JWT令牌的话</p></blockquote><p><strong>(4).认证服务配置</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableAuthorizationServer</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">AuthorizationServerConfig</span> <span class="keyword">extends</span> <span class="title class_">AuthorizationServerConfigurerAdapter</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TokenStore tokenStore;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDetailsService userDetailsService;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> AuthenticationManager authenticationManager;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> BCryptPasswordEncoder passwordEncoder;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(AuthorizationServerSecurityConfigurer security)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        security.tokenKeyAccess(<span class="string">&quot;permitAll()&quot;</span>).<span class="comment">//获取公钥开放</span></span><br><span class="line">                checkTokenAccess(<span class="string">&quot;permitAll()&quot;</span>).<span class="comment">//用户信息开放</span></span><br><span class="line">                allowFormAuthenticationForClients();<span class="comment">//允许表单验证</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(ClientDetailsServiceConfigurer clients)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        clients.inMemory().withClient(<span class="string">&quot;password&quot;</span>).<span class="comment">//标识客户端id</span></span><br><span class="line">                authorizedGrantTypes(<span class="string">&quot;authorization_code&quot;</span>,<span class="string">&quot;client_credentials&quot;</span>,<span class="string">&quot;implicit&quot;</span>,<span class="string">&quot;password&quot;</span>, <span class="string">&quot;refresh_token&quot;</span>).</span><br><span class="line">                accessTokenValiditySeconds(<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">30</span>*<span class="number">12</span>).<span class="comment">//access_token过期时间</span></span><br><span class="line">                refreshTokenValiditySeconds(<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">30</span>*<span class="number">12</span>*<span class="number">10</span>).<span class="comment">//refresh_token过期时间</span></span><br><span class="line">                resourceIds(<span class="string">&quot;rid&quot;</span>).<span class="comment">//资源id</span></span><br><span class="line">                scopes(<span class="string">&quot;all&quot;</span>).<span class="comment">//允许授权范围</span></span><br><span class="line">                secret(passwordEncoder.encode(<span class="string">&quot;123&quot;</span>))<span class="comment">//客户端密钥</span></span><br><span class="line">                .autoApprove(<span class="literal">false</span>)</span><br><span class="line">                .redirectUris(<span class="string">&quot;http://www.baidu.com&quot;</span>);<span class="comment">//回调地址</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(AuthorizationServerEndpointsConfigurer endpoints)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        endpoints.tokenStore(tokenStore())<span class="comment">//令牌存储</span></span><br><span class="line">                .authenticationManager(authenticationManager)<span class="comment">//令牌管理器</span></span><br><span class="line">                .userDetailsService(userDetailsService);<span class="comment">//用户信息user参数</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> TokenStore <span class="title function_">tokenStore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">InMemoryTokenStore</span>();<span class="comment">//存储方式redis、jdbc、memory、jwt</span></span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>(5).web安全配置</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableWebSecurity</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">WebSecurityConfig</span> <span class="keyword">extends</span> <span class="title class_">WebSecurityConfigurerAdapter</span> &#123;</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserAuthenticationSuccessHandler userAuthenticationSuccessHandler;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(AuthenticationManagerBuilder auth)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        auth.userDetailsService(userDetailsService());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> AuthenticationManager <span class="title function_">authenticationManager</span><span class="params">()</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">super</span>.authenticationManager();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="meta">@ConditionalOnMissingBean(UserDetailsService.class)</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> UserDetailsService <span class="title function_">userDetailsService</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">InMemoryUserDetailsManager</span> <span class="variable">inMemoryUserDetailsManager</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">InMemoryUserDetailsManager</span>();</span><br><span class="line">        String[][] usersGroupsAndRoles = &#123;</span><br><span class="line">                &#123;<span class="string">&quot;salaboy&quot;</span>, <span class="string">&quot;password&quot;</span>, <span class="string">&quot;ROLE_ACTIVITI_USER&quot;</span>, <span class="string">&quot;GROUP_activitiTeam&quot;</span>, <span class="string">&quot;GROUP_otherTeam&quot;</span>&#125;,</span><br><span class="line"></span><br><span class="line">                &#123;<span class="string">&quot;ryandawsonuk&quot;</span>, <span class="string">&quot;password&quot;</span>, <span class="string">&quot;ROLE_ACTIVITI_USER&quot;</span>, <span class="string">&quot;GROUP_activitiTeam&quot;</span>&#125;,</span><br><span class="line">                &#123;<span class="string">&quot;erdemedeiros&quot;</span>, <span class="string">&quot;password&quot;</span>, <span class="string">&quot;ROLE_ACTIVITI_USER&quot;</span>, <span class="string">&quot;GROUP_activitiTeam&quot;</span>&#125;,</span><br><span class="line">                &#123;<span class="string">&quot;other&quot;</span>, <span class="string">&quot;password&quot;</span>, <span class="string">&quot;ROLE_ACTIVITI_USER&quot;</span>, <span class="string">&quot;GROUP_otherTeam&quot;</span>&#125;,</span><br><span class="line">                &#123;<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;password&quot;</span>, <span class="string">&quot;ROLE_ACTIVITI_ADMIN&quot;</span>&#125;,</span><br><span class="line">        &#125;;</span><br><span class="line">        <span class="keyword">for</span> (String[] user : usersGroupsAndRoles) &#123;</span><br><span class="line">            List&lt;String&gt; authoritiesStrings = Arrays.asList(Arrays.copyOfRange(user, <span class="number">2</span>, user.length));</span><br><span class="line">            log.info(<span class="string">&quot;&gt; Registering new user: &quot;</span> + user[<span class="number">0</span>] + <span class="string">&quot; with the following Authorities[&quot;</span> + authoritiesStrings + <span class="string">&quot;]&quot;</span>);</span><br><span class="line">            inMemoryUserDetailsManager.createUser(<span class="keyword">new</span> <span class="title class_">User</span>(user[<span class="number">0</span>], passwordEncoder().encode(user[<span class="number">1</span>]),</span><br><span class="line">                    authoritiesStrings.stream().map(s -&gt; <span class="keyword">new</span> <span class="title class_">SimpleGrantedAuthority</span>(s)).collect(Collectors.toList())));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> inMemoryUserDetailsManager;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        http</span><br><span class="line">                .authorizeRequests().antMatchers(HttpMethod.OPTIONS).permitAll()<span class="comment">//permitAll:放过 authenticated：认证 denyAll：禁用</span></span><br><span class="line">                .antMatchers(<span class="string">&quot;/oauth/**&quot;</span>)<span class="comment">//路径</span></span><br><span class="line">                .permitAll().and().httpBasic().and()</span><br><span class="line">                .csrf().disable();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> PasswordEncoder <span class="title function_">passwordEncoder</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">BCryptPasswordEncoder</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>(6).请求方式</strong><br>授权码模式：<br>客户端获取code值<br>&#x2F;oauth&#x2F;authorize?client_id&#x3D;password&amp;response_type&#x3D;code&amp;scope&#x3D;all&amp;redirect_uri&#x3D;<a href="http://www.baidu.com/">http://www.baidu.com</a></p><blockquote><p>client_id：客户端准入标识。<br>response_type：授权码模式固定为code。<br>scope：客户端权限。<br>redirect_uri：跳转uri，当授权码申请成功后会跳转到此地址，并在后边带上code参数（授权码）</p></blockquote><div style="margin:auto;width:90%"><img src="/2021/01/20/springcloud-spring-security-oauth2-jwt%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/code.png" class></div><p>密码模式:</p><div style="margin:auto;width:90%"><img src="/2021/01/20/springcloud-spring-security-oauth2-jwt%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/password.png" class></div><p>客户端模式：</p><div style="margin:auto;width:90%"><img src="/2021/01/20/springcloud-spring-security-oauth2-jwt%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/client.png" class></div><p>简化模式：</p><p>浏览器访问：<a href="http://localhost:9006/oauth/authorize?client_id=password&amp;response_type=token&amp;scope=all&amp;redirect_uri=http://www.baidu.com">http://localhost:9006/oauth/authorize?client_id=password&amp;response_type=token&amp;scope=all&amp;redirect_uri=http://www.baidu.com</a></p><h3 id="2-资源服务"><a href="#2-资源服务" class="headerlink" title="2.资源服务"></a>2.资源服务</h3><p><strong>(1).引入pom依赖</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">          &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">          &lt;artifactId&gt;spring-cloud-starter-oauth2&lt;/artifactId&gt;</span><br><span class="line">      &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>(2).资源服务配置</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableResourceServer</span></span><br><span class="line"><span class="meta">@EnableGlobalMethodSecurity(prePostEnabled = true)</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ResourceServerConfig</span> <span class="keyword">extends</span> <span class="title class_">ResourceServerConfigurerAdapter</span> &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(ResourceServerSecurityConfigurer resources)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        resources</span><br><span class="line">                .resourceId(<span class="string">&quot;rid&quot;</span>).<span class="comment">//资源id（必须和认证服务一致）</span></span><br><span class="line">                .stateless(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(HttpSecurity http)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line"></span><br><span class="line">        http.authorizeRequests()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/**/current/get&quot;</span>,<span class="string">&quot;/**/oauth/**&quot;</span>,<span class="string">&quot;/swagger-ui.html&quot;</span>,<span class="string">&quot;/doc.html&quot;</span>,<span class="string">&quot;/**/v2/api-docs/**&quot;</span>,<span class="string">&quot;/error&quot;</span>,<span class="string">&quot;/**/swagger-resources/**&quot;</span>,<span class="string">&quot;/webjars/**&quot;</span>)</span><br><span class="line">                .permitAll()</span><br><span class="line">                .antMatchers(<span class="string">&quot;/**&quot;</span>)<span class="comment">//路径</span></span><br><span class="line">                .hasAnyRole(<span class="string">&quot;ADMIN&quot;</span>)<span class="comment">//用户角色权限</span></span><br><span class="line">                .anyRequest()</span><br><span class="line">                .authenticated();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="四、oauth2集成redis"><a href="#四、oauth2集成redis" class="headerlink" title="四、oauth2集成redis"></a>四、oauth2集成redis</h2><p><strong>1.引入pom依赖</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-boot-starter-data-redis&lt;/artifactId&gt;</span><br><span class="line">      &lt;exclusions&gt;</span><br><span class="line">          &lt;exclusion&gt;</span><br><span class="line">              &lt;groupId&gt;io.lettuce&lt;/groupId&gt;</span><br><span class="line">              &lt;artifactId&gt;lettuce-core&lt;/artifactId&gt;</span><br><span class="line">          &lt;/exclusion&gt;</span><br><span class="line">      &lt;/exclusions&gt;</span><br><span class="line">  &lt;/dependency&gt;</span><br><span class="line">  &lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;redis.clients&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;jedis&lt;/artifactId&gt;</span><br><span class="line">  &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>2.yml 添加配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  redis:</span><br><span class="line">    host: 192.168.42.146</span><br><span class="line">    port: 6379</span><br><span class="line">    database: 0</span><br><span class="line">    jedis:</span><br><span class="line">      pool:</span><br><span class="line">        max-active: 8</span><br><span class="line">        max-wait: -1</span><br><span class="line">        max-idle: 500</span><br><span class="line">        min-idle: 0</span><br></pre></td></tr></table></figure><p><strong>3.修改认证配置</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">@Autowired</span></span><br><span class="line"><span class="keyword">private</span> RedisConnectionFactory redisConnectionFactory;</span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> TokenStore <span class="title function_">tokenStore</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">RedisTokenStore</span>(redisConnectionFactory);<span class="comment">//存储方式redis、jdbc、memory、jwt</span></span><br><span class="line">     </span><br><span class="line">    &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>效果如下：</p><div style="margin:auto;width:90%"><img src="/2021/01/20/springcloud-spring-security-oauth2-jwt%E5%AE%9E%E7%8E%B0%E5%8D%95%E7%82%B9%E7%99%BB%E5%BD%95/redis.png" class></div><h2 id="五、oauth2集成jwt"><a href="#五、oauth2集成jwt" class="headerlink" title="五、oauth2集成jwt"></a>五、oauth2集成jwt</h2><h3 id="1-认证服务-1"><a href="#1-认证服务-1" class="headerlink" title="1.认证服务"></a>1.认证服务</h3><p><strong>(1).引入pom依赖</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> &lt;dependency&gt;</span><br><span class="line">           &lt;groupId&gt;org.springframework.security&lt;/groupId&gt;</span><br><span class="line">           &lt;artifactId&gt;spring-security-oauth2-jose&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>(2).生成密钥</strong><br>keytool -genkey -alias youlai -keyalg RSA -keypass 000000 -keystore youlai.jks -storepass 00000</p><blockquote><p>-genkey：生成密钥<br>-alias：别名<br>-keyalg：密钥算法<br>-keypass：密钥口令<br>-keystore：生成密钥库的存储路径和名称<br>-storepass：密钥库口令</p></blockquote><p>将生成的youlai.jks添加到resource下</p><p><strong>(3).修改配置文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">encrypt:</span><br><span class="line">  key-store:</span><br><span class="line">    location: classpath:youlai.jks</span><br><span class="line">    secret: 000000</span><br><span class="line">    <span class="built_in">alias</span>: youlai</span><br><span class="line">    password: 0000</span><br></pre></td></tr></table></figure><p><strong>(4).修改认证服务</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">   <span class="keyword">private</span> KeyProperties keyProperties;</span><br><span class="line"> <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(AuthorizationServerEndpointsConfigurer endpoints)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="comment">/*    endpoints.tokenStore(new RedisTokenStore(redisConnectionFactory))</span></span><br><span class="line"><span class="comment">                .authenticationManager(authenticationManager)</span></span><br><span class="line"><span class="comment">                .userDetailsService(userDetailsService);*/</span></span><br><span class="line">        TokenEnhancerChain enhancerChain=<span class="keyword">new</span> <span class="title class_">TokenEnhancerChain</span>();</span><br><span class="line">        <span class="keyword">final</span> List&lt;TokenEnhancer&gt; objects = Arrays.asList(jwtAccessTokenConverter(),consumerTokenEnhancer());</span><br><span class="line">        enhancerChain.setTokenEnhancers(objects);</span><br><span class="line">        endpoints.tokenEnhancer(enhancerChain)</span><br><span class="line">                .accessTokenConverter(jwtAccessTokenConverter())</span><br><span class="line">                .authenticationManager(authenticationManager)<span class="comment">//认证管理器</span></span><br><span class="line">                .tokenStore(tokenStore)<span class="comment">//令牌存储</span></span><br><span class="line">                .userDetailsService(userDetailsService)<span class="comment">//用户信息user参数</span></span><br><span class="line">                <span class="comment">// refresh_token有两种使用方式：重复使用(true)、非重复vice</span></span><br><span class="line">                <span class="comment">//                .tokenEnhancer(enhancerChain)//自定义jwt令牌中的携带使用(false)，默认为true</span></span><br><span class="line">                <span class="comment">//      1.重复使用：access_token过期刷新时， refresh token过期时间未改变，仍以初次生成的时间为准</span></span><br><span class="line">                <span class="comment">//      2.非重复使用：access_token过期刷新时， refresh_token过期时间延续，在refresh_token有效期内刷新而无需失效再次登录</span></span><br><span class="line">                .reuseRefreshTokens(<span class="literal">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> ConsumerTokenEnhancer <span class="title function_">consumerTokenEnhancer</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">ConsumerTokenEnhancer</span>(expiraTime,redisConnectionFactory);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> TokenStore <span class="title function_">tokenStore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="comment">//return new InMemoryTokenStore();</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JwtTokenStore</span>(jwtAccessTokenConverter());</span><br><span class="line">        <span class="comment">//return new RedisTokenStore(redisConnectionFactory);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> JwtAccessTokenConverter <span class="title function_">jwtAccessTokenConverter</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="type">JwtAccessTokenConverter</span> <span class="variable">converter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JwtAccessTokenConverter</span>();</span><br><span class="line">        converter.setKeyPair(keyPair()); <span class="comment">//对称秘钥，资源服务器使用该秘钥来验证</span></span><br><span class="line">        <span class="keyword">return</span> converter;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> KeyPair <span class="title function_">keyPair</span><span class="params">()</span>&#123;</span><br><span class="line">    <span class="keyword">return</span>  (<span class="keyword">new</span> <span class="title class_">KeyStoreKeyFactory</span>(<span class="built_in">this</span>.keyProperties.getKeyStore().getLocation(), <span class="built_in">this</span>.keyProperties.getKeyStore().getSecret().toCharArray())).getKeyPair(<span class="built_in">this</span>.keyProperties.getKeyStore().getAlias(), <span class="built_in">this</span>.keyProperties.getKeyStore().getPassword().toCharArray());</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-资源服务-1"><a href="#2-资源服务-1" class="headerlink" title="2.资源服务"></a>2.资源服务</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> TokenStore tokenStore;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(ResourceServerSecurityConfigurer resources)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        resources</span><br><span class="line">                .resourceId(<span class="string">&quot;rid&quot;</span>).tokenStore(tokenStore)</span><br><span class="line">                .stateless(<span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> TokenStore <span class="title function_">tokenStore</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">JwtTokenStore</span>(jwtAccessTokenConverter());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="keyword">public</span> JwtAccessTokenConverter <span class="title function_">jwtAccessTokenConverter</span><span class="params">()</span>&#123;</span><br><span class="line">        <span class="type">JwtAccessTokenConverter</span> <span class="variable">converter</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">JwtAccessTokenConverter</span>();</span><br><span class="line">        <span class="type">Resource</span> <span class="variable">resource</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">ClassPathResource</span>(<span class="string">&quot;publicKey.txt&quot;</span>);<span class="comment">//秘钥</span></span><br><span class="line">        String publicKey;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            publicKey = <span class="keyword">new</span> <span class="title class_">String</span>(FileCopyUtils.copyToByteArray(resource.getInputStream()));</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">RuntimeException</span>(e);</span><br><span class="line">        &#125;</span><br><span class="line">        converter.setVerifierKey(publicKey);</span><br><span class="line">        <span class="keyword">return</span> converter;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、SSO基本介绍&quot;&gt;&lt;a href=&quot;#一、SSO基本介绍&quot; class=&quot;headerlink&quot; title=&quot;一、SSO基本介绍&quot;&gt;&lt;/a&gt;一、SSO基本介绍&lt;/h2&gt;&lt;p&gt; SSO（Single Sign-On，单点登录）是身份管理中的一部分。SSO的一种</summary>
      
    
    
    
    <category term="微服务" scheme="https://root1761.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="security" scheme="https://root1761.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/security/"/>
    
    
    <category term="springcloud" scheme="https://root1761.github.io/tags/springcloud/"/>
    
    <category term="oauth2" scheme="https://root1761.github.io/tags/oauth2/"/>
    
    <category term="jwt" scheme="https://root1761.github.io/tags/jwt/"/>
    
  </entry>
  
  <entry>
    <title>阿里微服务开发相关介绍</title>
    <link href="https://root1761.github.io/2021/01/20/%E9%98%BF%E9%87%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3%E4%BB%8B%E7%BB%8D/"/>
    <id>https://root1761.github.io/2021/01/20/%E9%98%BF%E9%87%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3%E4%BB%8B%E7%BB%8D/</id>
    <published>2021-01-20T01:18:00.000Z</published>
    <updated>2022-08-05T02:28:01.050Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、微服务基本介绍"><a href="#一、微服务基本介绍" class="headerlink" title="一、微服务基本介绍"></a>一、微服务基本介绍</h2><p><strong>微服务</strong> - 也被称为微服务架构 - 是一种架构风格，它是使一个整合了业务功能的程序成为一个松耦合服务的架构。微服务架构使大型的，复杂的应用程序，可以连续快速的实现和部署。另外，它也使得企业可以发展自己的技术栈体系。</p><p>微服务不是银弹<br>微服务架构不是银弹，它有几个缺点。此外，采用这种架构的时候，你必须解决许多问题。微服务架构模式语言是一系列实现微服务架构模式的集合。 它有两个目标：<br>1，模式语言使您能够决定微服务是否一个非常适合你的应用程序。<br>2，模式语言使您能够成功使用微服务架构。</p><h2 id="二、微服务组成部分"><a href="#二、微服务组成部分" class="headerlink" title="二、微服务组成部分"></a>二、微服务组成部分</h2><blockquote><p>服务注册与发现：nacos、eureka、consul、zookeeper<br>配置中心：nacos 、config<br>路由网关：gateway、zuul<br>链路追踪：zipkin 、Sleuth<br>服务调用：ribbon、feign<br>分布式事务：seata<br>服务总线：bus、nacos<br>熔断与限流：hystrix、Sentinel、resilience4j<br>日志收集：ELK<br>工作流：Flowable、activiti<br>任务调度：xxl-job、power-job</p></blockquote><h2 id="三、父工程搭建"><a href="#三、父工程搭建" class="headerlink" title="三、父工程搭建"></a>三、父工程搭建</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br></pre></td><td class="code"><pre><span class="line">&lt;properties&gt;</span><br><span class="line">        &lt;spring-cloud.version&gt;Hoxton.SR8&lt;/spring-cloud.version&gt;</span><br><span class="line">        &lt;spring-cloud-alibaba.version&gt;2.2.1.RELEASE&lt;/spring-cloud-alibaba.version&gt;</span><br><span class="line">        &lt;knife4j.version&gt;2.0.4&lt;/knife4j.version&gt;</span><br><span class="line">        &lt;spring-boot.version&gt;2.3.5.RELEASE&lt;/spring-boot.version&gt;</span><br><span class="line">        &lt;java.version&gt;1.8&lt;/java.version&gt;</span><br><span class="line">        &lt;mysql.version&gt;8.0.18&lt;/mysql.version&gt;</span><br><span class="line">        &lt;druid.version&gt;1.1.22&lt;/druid.version&gt;</span><br><span class="line">        &lt;guava.version&gt;30.0-jre&lt;/guava.version&gt;</span><br><span class="line">        &lt;seata.version&gt;1.3.0&lt;/seata.version&gt;</span><br><span class="line">        &lt;lombok.version&gt;1.18.4&lt;/lombok.version&gt;</span><br><span class="line">        &lt;easypoi.version&gt;4.2.0&lt;/easypoi.version&gt;</span><br><span class="line">        &lt;mybatis-plus.version&gt;3.3.1&lt;/mybatis-plus.version&gt;</span><br><span class="line">        &lt;project.build.sourceEncoding&gt;UTF-8&lt;/project.build.sourceEncoding&gt;</span><br><span class="line">    &lt;/properties&gt;</span><br><span class="line">    &lt;dependencyManagement&gt;</span><br><span class="line">        &lt;dependencies&gt;</span><br><span class="line">            &lt;!--core-service--&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;com.lnsoft&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;core-service&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;project.version&#125;</span>&lt;/version&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">            &lt;!--gateway--&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;com.lnsoft&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;gateway&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;project.version&#125;</span>&lt;/version&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.boot&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-boot-dependencies&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;spring-boot.version&#125;</span>&lt;/version&gt;</span><br><span class="line">                &lt;<span class="built_in">type</span>&gt;pom&lt;/type&gt;</span><br><span class="line">                &lt;scope&gt;import&lt;/scope&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;io.seata&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;seata-all&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;seata.version&#125;</span>&lt;/version&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;io.seata&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;seata-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;seata.version&#125;</span>&lt;/version&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;mybatis-plus-boot-starter&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;mybatis-plus.version&#125;</span>&lt;/version&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">            &lt;!--Spring cloud alibaba 2.2.1.RELEASE--&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-cloud-alibaba-dependencies&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;spring-cloud-alibaba.version&#125;</span>&lt;/version&gt;</span><br><span class="line">                &lt;<span class="built_in">type</span>&gt;pom&lt;/type&gt;</span><br><span class="line">                &lt;scope&gt;import&lt;/scope&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">            &lt;!--easypoi--&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;cn.afterturn&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;easypoi-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;easypoi.version&#125;</span>&lt;/version&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">            &lt;!--swagger--&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;com.github.xiaoymin&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;knife4j-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;knife4j.version&#125;</span>&lt;/version&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">            &lt;!--mysql--&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;mysql&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;mysql.version&#125;</span>&lt;/version&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">            &lt;!--druid--&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;com.alibaba&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;druid-spring-boot-starter&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;druid.version&#125;</span>&lt;/version&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">            &lt;!--lombok--&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.projectlombok&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;lombok&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;lombok.version&#125;</span>&lt;/version&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;com.baomidou&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;mybatis-plus-generator&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;mybatis-plus.version&#125;</span>&lt;/version&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">            &lt;!--google--&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;com.google.guava&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;guava&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;guava.version&#125;</span>&lt;/version&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line">            &lt;!--springcloud--&gt;</span><br><span class="line">            &lt;dependency&gt;</span><br><span class="line">                &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">                &lt;artifactId&gt;spring-cloud-dependencies&lt;/artifactId&gt;</span><br><span class="line">                &lt;version&gt;<span class="variable">$&#123;spring-cloud.version&#125;</span>&lt;/version&gt;</span><br><span class="line">                &lt;<span class="built_in">type</span>&gt;pom&lt;/type&gt;</span><br><span class="line">                &lt;scope&gt;import&lt;/scope&gt;</span><br><span class="line">            &lt;/dependency&gt;</span><br><span class="line"></span><br><span class="line">        &lt;/dependencies&gt;</span><br><span class="line">    &lt;/dependencyManagement&gt;</span><br></pre></td></tr></table></figure><h2 id="四、nacos注册中心"><a href="#四、nacos注册中心" class="headerlink" title="四、nacos注册中心"></a>四、nacos注册中心</h2><p><strong>1.引入pom依赖</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-discovery&lt;/artifactId&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>主启动类添加注解：@EnableDiscoveryClient<br><strong>2.yml文件添加配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: <span class="built_in">test</span></span><br><span class="line">  cloud:</span><br><span class="line">    nacos:</span><br><span class="line">      discovery:</span><br><span class="line">        server-addr: 10.0.0.1:8848 <span class="comment">#注册中心地址</span></span><br></pre></td></tr></table></figure><h2 id="五、nacos配置中心"><a href="#五、nacos配置中心" class="headerlink" title="五、nacos配置中心"></a>五、nacos配置中心</h2><p><strong>1.引入pom依赖</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">     &lt;groupId&gt;com.alibaba.cloud&lt;/groupId&gt;</span><br><span class="line">     &lt;artifactId&gt;spring-cloud-starter-alibaba-nacos-config&lt;/artifactId&gt;</span><br><span class="line"> &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>2.yml文件添加配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  application:</span><br><span class="line">    name: gateway</span><br><span class="line">  cloud:</span><br><span class="line">    nacos:</span><br><span class="line">      config:</span><br><span class="line">        server-addr: 10.0.0.1:8848 <span class="comment">#配置中心地址</span></span><br><span class="line">        file-extension: yaml</span><br><span class="line">        namespace: public</span><br><span class="line">        group: DEFAULT_GROUP</span><br><span class="line">        extension-configs:</span><br><span class="line">          - data-id: qxgd-env.yaml</span><br><span class="line">            refresh: <span class="literal">true</span> <span class="comment">#自动刷新</span></span><br><span class="line">            group: DEFAULT_GROUP</span><br></pre></td></tr></table></figure><div style="width:90%;margin:auto"><img src="/2021/01/20/%E9%98%BF%E9%87%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BC%80%E5%8F%91%E7%9B%B8%E5%85%B3%E4%BB%8B%E7%BB%8D/config.png" class></div><h2 id="六、网关gateway"><a href="#六、网关gateway" class="headerlink" title="六、网关gateway"></a>六、网关gateway</h2><p><strong>1.引入pom依赖</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  &lt;!-- 只有网关需要引入 --&gt;</span><br><span class="line">&lt;dependency&gt;</span><br><span class="line">      &lt;groupId&gt;org.springframework.cloud&lt;/groupId&gt;</span><br><span class="line">      &lt;artifactId&gt;spring-cloud-starter-gateway&lt;/artifactId&gt;</span><br><span class="line">  &lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p><strong>2.yml文件添加配置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  cloud:</span><br><span class="line">    gateway:</span><br><span class="line">      routes:</span><br><span class="line">      - <span class="built_in">id</span>: gdfw-qxgd <span class="comment">#唯一主键</span></span><br><span class="line">        uri: lb://gdfw-qxgd <span class="comment">#注册服务名</span></span><br><span class="line">        predicates:</span><br><span class="line">        - Path=/gdfw-qxgd/** <span class="comment">#访问路径</span></span><br><span class="line">        filters:</span><br><span class="line">        - StripPrefix=1</span><br><span class="line">        - SwaggerHeaderFilter</span><br><span class="line">      discovery:</span><br><span class="line">        locator:</span><br><span class="line">          lower-case-service-id: <span class="literal">true</span> <span class="comment">#路劲自动转换为小写</span></span><br><span class="line">          enabled: <span class="literal">true</span> <span class="comment">#自动注入</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、微服务基本介绍&quot;&gt;&lt;a href=&quot;#一、微服务基本介绍&quot; class=&quot;headerlink&quot; title=&quot;一、微服务基本介绍&quot;&gt;&lt;/a&gt;一、微服务基本介绍&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;微服务&lt;/strong&gt; - 也被称为微服务架构 - 是一种架构风格</summary>
      
    
    
    
    <category term="微服务" scheme="https://root1761.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="阿里微服务" scheme="https://root1761.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/%E9%98%BF%E9%87%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    
    <category term="java" scheme="https://root1761.github.io/tags/java/"/>
    
    <category term="springcloud" scheme="https://root1761.github.io/tags/springcloud/"/>
    
  </entry>
  
  <entry>
    <title>hadoop基本介绍和安装使用</title>
    <link href="https://root1761.github.io/2020/07/26/hadoop%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/"/>
    <id>https://root1761.github.io/2020/07/26/hadoop%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/</id>
    <published>2020-07-26T01:01:00.000Z</published>
    <updated>2022-08-05T02:19:00.465Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一-hadoop基本介绍"><a href="#一-hadoop基本介绍" class="headerlink" title="一.hadoop基本介绍"></a>一.hadoop基本介绍</h2><p>Hadoop由HDFS、MapReduce、HBase、Hive和ZooKeeper等成员组成，其中最重要的是底层用于存储集群中所有存储节点文件的文件系HDFS（Hadoop Distributed File System）和上层用来执行MapReduce程序的MapReduce引擎</p><div style="margin:auto;width:90%"><img src="/2020/07/26/hadoop%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/hadoop_1.png" class></div><blockquote><p>1、Pig是一个基于Hadoop的大规模数据分析平台，Pig为复杂的海量数据并行计算提供了一个简易的操作和编程接口<br>2、Chukwa是基于Hadoop的集群监控系统，由yahoo贡献<br>hive是基于Hadoop的一个工具，提供完整的sql查询功能，可以将sql语句转换为MapReduce任务进行运行<br>3、ZooKeeper：高效的，可扩展的协调系统,存储和协调关键共享状态<br>4、HBase是一个开源的，基于列存储模型的分布式数据库<br>5、HDFS是一个分布式文件系统。有着高容错性的特点，并且设计用来部署在低廉的硬件上，适合那些有着超大数据集的应用程序<br>6、MapReduce是一种编程模型，用于大规模数据集（大于1TB）的并行运算</p></blockquote><p>下图是一个典型的Hadoop试验集群的部署结构：</p><div style="margin:auto;width:90%"><img src="/2020/07/26/hadoop%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/hadoop_2.png" class></div><p>Hadoop组件之间的依赖关系：</p><div style="margin:auto;width:90%"><img src="/2020/07/26/hadoop%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/hadoop_3.png" class></div><h2 id="二-Hadoop的核心架构"><a href="#二-Hadoop的核心架构" class="headerlink" title="二.Hadoop的核心架构"></a>二.Hadoop的核心架构</h2><div style="margin:auto;width:90%"><img src="/2020/07/26/hadoop%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/hadoop_4.png" class></div><h2 id="1-HDFS"><a href="#1-HDFS" class="headerlink" title="1.HDFS"></a><strong>1.HDFS</strong></h2><p>HDFS是一个高度容错性的分布式文件系统，可以被广泛的部署于廉价的PC上。它以流式访问模式访问应用程序的数据，这大大提高了整个系统的数据吞吐量，因而非常适合用于具有超大数据集的应用程序中。<br>HDFS的架构如图所示。HDFS架构采用主从架构（master&#x2F;slave）。一个典型的HDFS集群包含一个NameNode节点和多个DataNode节点。NameNode节点负责整个HDFS文件系统中的文件的元数据的保管和管理，集群中通常只有一台机器上运行NameNode实例，DataNode节点保存文件中的数据，集群中的机器分别运行一个DataNode实例。在HDFS中，NameNode节点被称为名称节点，DataNode节点被称为数据节点。DataNode节点通过心跳机制与NameNode节点进行定时的通信。 </p><div style="margin:auto;width:90%"><img src="/2020/07/26/hadoop%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/hadoop_5.png" class></div><blockquote><p><strong>1、NameNode</strong><br><strong>可以看作是分布式文件系统中的管理者，存储文件系统的meta-data，主要负责管理文件系统的命名空间，集群配置信息，存储块的复制。</strong><br> &amp;emsp;fsimage - 它是在NameNode启动时对整个文件系统的快照<br> &amp;emsp;edit logs - 它是在NameNode启动后，对文件系统的改动序列<br><br><strong>2、DataNode</strong><br><strong>是文件存储的基本单元。它存储文件块在本地文件系统中，保存了文件块的meta-data，同时周期性的发送所有存在的文件块的报告给NameNode。</strong><br><br><strong>3、Secondary NameNode</strong><br><strong>合并NameNode的edit logs到fsimage文件中。</strong><br><br><strong>4、Client</strong><br><strong>就是需要获取分布式文件系统文件的应用程序。</strong></p></blockquote><h3 id="HDFS读写操作："><a href="#HDFS读写操作：" class="headerlink" title="HDFS读写操作："></a>HDFS读写操作：</h3><p>文件写入：<br>   &amp;emsp;&amp;emsp; 1.Client向NameNode发起文件写入的请求<br>   &amp;emsp;&amp;emsp; 2.NameNode根据文件大小和文件块配置情况，返回给Client它所管理部分DataNode的信息。<br>   &amp;emsp;&amp;emsp; 3.Client将文件划分为多个文件块，根据DataNode的地址信息，按顺序写入到每一个DataNode块中</p><div style="margin:auto;width:90%"><img src="/2020/07/26/hadoop%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/hadoop_6.png" class></div>文件读取：<br>&emsp;&emsp;1.Client向NameNode发起文件读取的请求<br> &emsp;&emsp;2. NameNode返回文件存储的DataNode的信息。<br> &emsp;&emsp;3. Client读取文件信息。<div style="margin:auto;width:90%"><img src="/2020/07/26/hadoop%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/hadoop_7.png" class></div><h2 id="2-MapReducer"><a href="#2-MapReducer" class="headerlink" title="2.MapReducer"></a><strong>2.MapReducer</strong></h2><p>MapReduce是一种编程模型，用于大规模数据集的并行运算。Map（映射）和Reduce（化简），采用分而治之思想，先把任务分发到集群多个节点上，并行计算，然后再把计算结果合并，从而得到最终计算结果。多节点计算，所涉及的任务调度、负载均衡、容错处理等，都由MapReduce框架完成。<br>下图是MapReducer的处理过程：</p><div style="margin:auto;width:90%"><img src="/2020/07/26/hadoop%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/hadoop_8.png" class></div><p>用户提交任务给JobTracer，JobTracer把对应的用户程序中的Map操作和Reduce操作映射至TaskTracer节点中；输入模块负责把输入数据分成小数据块，然后把它们传给Map节点；Map节点得到每一个key&#x2F;value对，处理后产生一个或多个key&#x2F;value对，然后写入文件；Reduce节点获取临时文件中的数据，对带有相同key的数据进行迭代计算，然后把终结果写入文件。<br>如果这样解释还是太抽象，可以通过下面一个具体的处理过程来理解：（WordCount实例） </p><div style="margin:auto;width:90%"><img src="/2020/07/26/hadoop%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/hadoop_9.png" class></div><p>Hadoop的核心是MapReduce，而MapReduce的核心又在于map和reduce函数。它们是交给用户实现的，这两个函数定义了任务本身。</p><p>map函数：接受一个键值对（key-value pair）（例如上图中的Splitting结果），产生一组中间键值对（例如上图中Mapping后的结果）。Map&#x2F;Reduce框架会将map函数产生的中间键值对里键相同的值传递给一个reduce函数。<br>reduce函数：接受一个键，以及相关的一组值（例如上图中Shuffling后的结果），将这组值进行合并产生一组规模更小的值（通常只有一个或零个值）（例如上图中Reduce后的结果）</p><p>但是，Map&#x2F;Reduce并不是万能的，适用于Map&#x2F;Reduce计算有先提条件：<br>（1）待处理的数据集可以分解成许多小的数据集；<br>（2）而且每一个小数据集都可以完全并行地进行处理；</p><h2 id="3-Yarn"><a href="#3-Yarn" class="headerlink" title="3.Yarn"></a><strong>3.Yarn</strong></h2><p>Apache Hadoop YARN 是开源 Hadoop 分布式处理框架中的资源管理和作业调度技术。作为 Apache Hadoop 的核心组件之一，YARN 负责将系统资源分配给在 Hadoop 集群中运行的各种应用程序，并调度要在不同集群节点上执行的任务。<br>YARN 的基本思想是将资源管理和作业调度&#x2F;监视的功能分解为单独的 daemon(守护进程)，其拥有一个全局 ResourceManager(RM) 和每个应用程序的 ApplicationMaster(AM)。应用程序可以是单个作业，也可以是作业的 DAG。</p><div style="margin:auto;width:90%"><img src="/2020/07/26/hadoop%E5%9F%BA%E6%9C%AC%E4%BB%8B%E7%BB%8D%E5%92%8C%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8/hadoop_10.webp" class></div><p>yarn的基本组成：<br>ResourceManager是Master上一个独立运行的进程，负责集群统一的资源管理、调度、分配等等；<br>NodeManager是Slave上一个独立运行的进程，负责上报节点的状态；<br>ApplicationMaster相当于这个Application的监护人和管理者，负责监控、管理这个Application的所有Attempt在cluster中各个节点上的具体运行，同时负责向Yarn ResourceManager申请资源、返还资源等；<br>Container是yarn中分配资源的一个单位，包涵内存、CPU等等资源，YARN以Container为单位分配资源；</p><h2 id="三-hadoop安装和使用"><a href="#三-hadoop安装和使用" class="headerlink" title="三.hadoop安装和使用"></a>三.hadoop安装和使用</h2><p><strong>1.hadoop准备工作，ssh免密登录</strong></p><p>检查不通过密码ssh到本地主机</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh localhost</span><br></pre></td></tr></table></figure><p>如果不能进行如下操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_rsa</span><br><span class="line"><span class="built_in">cat</span>〜/ .ssh / id_rsa.pub &gt;&gt;〜/ .ssh / authorized_keys</span><br><span class="line"><span class="built_in">chmod</span> 0600〜/ .ssh / authorized_keys</span><br></pre></td></tr></table></figure><p>安装java的环境变量JDK</p><p><strong>2.安装hadoop</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://mirror.bit.edu.cn/apache/hadoop/common/hadoop-2.10.0/hadoop-2.10.0.tar.gz</span><br><span class="line">tar -zxvf hadoop-2.10.0.tar.gz</span><br></pre></td></tr></table></figure><p><strong>3.hadoop伪分布式搭建</strong></p><p>1.hdfs:</p><p>(1)编辑文件etc&#x2F;hadoop-env.sh设置java的环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=JDK安装路径</span><br></pre></td></tr></table></figure><p>(2)编辑文件&#x2F;hadoop&#x2F;core-site.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">       &lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">       &lt;value&gt;hdfs://主机名:9000&lt;/value&gt;</span><br><span class="line">   &lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">       &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">       &lt;value&gt;/usr/hadoop-2.10.0/tmp-<span class="variable">$&#123;user.name&#125;</span>&lt;/value&gt;</span><br><span class="line"> &lt;/property&gt;</span><br></pre></td></tr></table></figure><p>(3)编辑文件&#x2F;hadoop&#x2F;hdfs-site.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">       &lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">       &lt;value&gt;1&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><p>(5)格式化namenode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/hdfs namenode -format</span><br></pre></td></tr></table></figure><p>(6)启动datanode和namenode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sbin / start-dfs.sh</span><br></pre></td></tr></table></figure><p>完成后可以通过以下命令关闭：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sbin / stop-dfs.sh</span><br></pre></td></tr></table></figure><p>浏览Web界面的NameNode；默认情况下，它在以下位置可用：</p><p><a href="http://ip:50070/">http://ip:50070</a></p><p>hds的基本命令：</p><blockquote><p>.&#x2F;bin&#x2F;hadoop fs -touchz &#x2F;hdfs&#x2F;aa.t&amp;emsp;&amp;emsp;   &#x2F;&#x2F;在hdfs中创建一个大小为0的文件<br>.&#x2F;bin&#x2F;hadoop fs -touchz &#x2F;usr&#x2F;a.txt &#x2F;hdfs&#x2F;dest.t &amp;emsp;&amp;emsp;  &#x2F;&#x2F;将本地文件内容追加到hdfs中的特定文件中<br>.&#x2F;bin&#x2F;hadoop fs -cat &#x2F;hdfs&#x2F;f1.t &#x2F;hdfs&#x2F;f2.t&amp;emsp;&amp;emsp;&#x2F;&#x2F;将f1.t和f2.t文件内容合并现实查看<br>.&#x2F;bin&#x2F;hadoop fs -chmod -R a+x &#x2F;hdfs&#x2F;f3&#x2F;*   &amp;emsp;&amp;emsp; &#x2F;&#x2F;递归更改特定目录下文件的权限。权限表示和linux shell一样<br>.&#x2F;bin&#x2F;hadoop fs -count &#x2F;hdfs&#x2F;f1.t &amp;emsp;&amp;emsp;   &#x2F;&#x2F;查看path文件数量相关信息<br>.&#x2F;bin&#x2F;hadoop fs -cp &#x2F;hdfs&#x2F;f1.t &#x2F;hdfs&#x2F;f1   &amp;emsp;&amp;emsp;&#x2F;&#x2F;在hdfs系统中进行文件copy<br>.&#x2F;bin&#x2F;hadoop fs -du &#x2F;hdfs&#x2F;f1.t &amp;emsp;&amp;emsp;  &#x2F;&#x2F;计算文件占用磁盘大小<br>.&#x2F;bin&#x2F;hadoop fs &#x2F;hdfs&#x2F;* &#x2F;usr&#x2F; &amp;emsp;&amp;emsp;   &#x2F;&#x2F;将hdfs系统中的文件下载到本地系统<br>.&#x2F;bin&#x2F;hadoop fs -ls &#x2F;hdfs   &amp;emsp;&amp;emsp;  &#x2F;&#x2F;现实特定目录下的所有文件<br>.&#x2F;bin&#x2F;hadoop fs -mkdir &#x2F;hdfs&#x2F;f2 &amp;emsp;&amp;emsp;  &#x2F;&#x2F;在hdfs中创建文件夹<br>.&#x2F;bin&#x2F;hadoop fs &#x2F;hdfs&#x2F;* &#x2F;hdfs&#x2F;f2 &amp;emsp;&amp;emsp;  &#x2F;&#x2F;在hdfs中完成文件的移动<br>.&#x2F;bin&#x2F;hadoop fs -put &#x2F;usr&#x2F;aa.t &#x2F;hdfs&#x2F;  &amp;emsp;&amp;emsp; &#x2F;&#x2F;将本地文件上传到hdfs系统中<br>.&#x2F;bin&#x2F;hadoop fs -rm &#x2F;hdfs&#x2F;f1.t  &amp;emsp;&amp;emsp;  &#x2F;&#x2F;删除特定文件<br>.&#x2F;bin&#x2F;hadoop fs -tail &#x2F;hdfs&#x2F;f1.t  &amp;emsp;&amp;emsp;  &#x2F;&#x2F;查看文件最后的1k数据<br>.&#x2F;bin&#x2F;hadoop fs -text &#x2F;hdfs&#x2F;f1.zip &amp;emsp;&amp;emsp;   &#x2F;&#x2F;以二进制的形式查看文件内容<br>.&#x2F;bin&#x2F;hadoop fs -usage text   &amp;emsp;&amp;emsp; &#x2F;&#x2F;查看text指令的使用方式</p></blockquote><p>2.MapReducer</p><p>注意：MapReducer是在HDFS的基础上搭建的</p><p>(1)编辑etc &#x2F; hadoop &#x2F; mapred-site.xml文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;mapreduce.application.classpath&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;<span class="variable">$HADOOP_MAPRED_HOME</span>/share/hadoop/mapreduce/*:<span class="variable">$HADOOP_MAPRED_HOME</span>/share/hadoop/mapreduce/lib/*&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>(2)编辑etc&#x2F;hadoop&#x2F;yarn-site.xml文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">    &lt;name&gt;yarn.nodemanager.env-whitelist&lt;/name&gt;</span><br><span class="line">    &lt;value&gt;JAVA_HOME,HADOOP_COMMON_HOME,HADOOP_HDFS_HOME,HADOOP_CONF_DIR,CLASSPATH_PREPEND_DISTCACHE,HADOOP_YARN_HOME,HADOOP_MAPRED_HOME&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><p>(3)启动nodeManager和ResourceManager</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sbin/start-yarn.sh</span><br></pre></td></tr></table></figure><p>(4)完成后可以通过以下方式关闭</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./sbin/stop-yarn.sh</span><br></pre></td></tr></table></figure><p>(5)启动jar测试mapReducer</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/hadoop jar ./share/hadoop/mapreducehadoop-mapreduce-examples-2.10.0 wordcount /dir1/a.txt /result</span><br></pre></td></tr></table></figure><p>&#x2F;dir1&#x2F;a.txt：读取文件目录<br>&#x2F;result：输出结果目录<br>浏览Web界面以查找ResourceManager；默认情况下，它在以下位置可用：<br><a href="http://ip:8088/">http://ip:8088</a></p><blockquote><p>hadoop相关的代码案例及具体使用：</p><footer><strong>访问——</strong><cite><a href="https://github.com/root1761/bigdata/tree/master/hadoop">hadoop</a></cite></footer></blockquote><h2 id="四-hadoop集群搭建"><a href="#四-hadoop集群搭建" class="headerlink" title="四.hadoop集群搭建"></a>四.hadoop集群搭建</h2><table><thead><tr><th align="center">节点</th><th align="center">IP</th><th align="center">namenode</th><th align="center">datanode</th><th align="center">journalnode(替代secondary namenode)</th><th align="center">yarn</th></tr></thead><tbody><tr><td align="center">hadoop01</td><td align="center">10.0.0.1</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center">√</td></tr><tr><td align="center">hadoop02</td><td align="center">10.0.0.2</td><td align="center">√</td><td align="center">√</td><td align="center">√</td><td align="center"></td></tr><tr><td align="center">hadoop03</td><td align="center">10.0.0.3</td><td align="center"></td><td align="center">√</td><td align="center">√</td><td align="center"></td></tr></tbody></table><p><strong>1.hadoop多台机器间免密登陆</strong><br>(1)添加主机名和ip地址映射</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1 localhost localhost.localdomain localhost4 localhost4.localdomain4</span><br><span class="line">::1 localhost localhost.localdomain localhost6 localhost6.localdomain6</span><br><span class="line">10.0.0.1 hadoop01</span><br><span class="line">10.0.0.2 hadoop02</span><br><span class="line">10.0.0.3 hadoop03</span><br></pre></td></tr></table></figure><p>(2)产生免密码登录的公私钥对</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t dsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_dsa</span><br></pre></td></tr></table></figure><p>(3)将公钥拷贝到统一的机器上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp /root/.ssh/id_dsa.pub root@hadoop01:/root/.ssh/id_1_dsa.pub</span><br><span class="line">scp /root/.ssh/id_dsa.pub root@hadoop01:/root/.ssh/id_2_dsa.pub</span><br></pre></td></tr></table></figure><p>(4)将公钥添加信任列表中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /root/.ssh/id_1_rsa.pub &gt;&gt; /root/.ssh/authorized_keys</span><br><span class="line"><span class="built_in">cat</span> /root/.ssh/id_2_rsa.pub &gt;&gt; /root/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>(5)将信任列表进行同步</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp /root/.ssh/authorized_keys root@hadoop02:/root/.ssh/</span><br><span class="line">scp /root/.ssh/authorized_keys root@hadoop03:/root/.ssh/</span><br></pre></td></tr></table></figure><p>(6)赋予权限<br>ssh目录的权限必须是700<br>ssh&#x2F;authorized_keys文件权限必须是600</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> 700 /root/.ssh</span><br><span class="line"><span class="built_in">chmod</span> 600 /root/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p><strong>2.hadoop集群搭建准备工作</strong></p><p>1.准备三台服务器<br>2.准备机架配置文件</p><p>rack.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> [ <span class="variable">$#</span> -gt 0 ] ; <span class="keyword">do</span></span><br><span class="line">  nodeArg=<span class="variable">$1</span></span><br><span class="line">  <span class="built_in">exec</span>&lt;/usr/hadoop-2.10.0/etc/hadoop/topology.data </span><br><span class="line">  result=<span class="string">&quot;&quot;</span> </span><br><span class="line">  <span class="keyword">while</span> <span class="built_in">read</span> line ; <span class="keyword">do</span></span><br><span class="line">    ar=( <span class="variable">$line</span> ) </span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;ar[0]&#125;</span>&quot;</span> = <span class="string">&quot;<span class="variable">$nodeArg</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">      result=<span class="string">&quot;<span class="variable">$&#123;ar[1]&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">  <span class="keyword">done</span> </span><br><span class="line">  <span class="built_in">shift</span> </span><br><span class="line">  <span class="keyword">if</span> [ -z <span class="string">&quot;<span class="variable">$result</span>&quot;</span> ] ; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">&quot;/defaulta/rack_&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$result</span> &quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span> </span><br></pre></td></tr></table></figure><p>topology.data</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">10.0.0.1     /dc1_rack1</span><br><span class="line">10.0.0.2     /dc1_rack2</span><br><span class="line">10.0.0.3     /dc1_rack3</span><br></pre></td></tr></table></figure><p>3.zookeeper集群</p><p><strong>3.hadoop集群搭建</strong></p><p>(1)配置core-site.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;fs.defaultFS&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hdfs://mycluster&lt;/value&gt; //mycluster是对namenode做命名服务</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;fs.trash.interval&lt;/name&gt; //开启回收站</span><br><span class="line">&lt;value&gt;10&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;net.topology.script.file.name&lt;/name&gt; //机架配置</span><br><span class="line">&lt;value&gt;/usr/hadoop-2.10.0/etc/hadoop/rack.sh&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;hadoop.tmp.dir&lt;/name&gt;</span><br><span class="line">&lt;value&gt;/usr/hadoop-2.10.0/tmp-<span class="variable">$&#123;user.name&#125;</span>&lt;/value&gt;</span><br><span class="line">&lt;/property&gt; </span><br></pre></td></tr></table></figure><p>(2)配置hdfs-site.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.replication&lt;/name&gt;</span><br><span class="line">&lt;value&gt;3&lt;/value&gt;</span><br><span class="line">&lt;/property&gt; </span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.nameservices&lt;/name&gt;</span><br><span class="line">&lt;value&gt;mycluster&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.ha.namenodes.mycluster&lt;/name&gt;</span><br><span class="line">&lt;value&gt;nn1,nn2&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.namenode.rpc-address.mycluster.nn1&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hadoop01:8020&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.namenode.rpc-address.mycluster.nn2&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hadoop02:8020&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.namenode.http-address.mycluster.nn1&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hadoop01:50070&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.namenode.http-address.mycluster.nn2&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hadoop02:50070&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.namenode.shared.edits.dir&lt;/name&gt;</span><br><span class="line">&lt;value&gt;qjournal://hadoop01:8485;hadoop02:8485;hadoop03:8485/mycluster&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.client.failover.proxy.provider.mycluster&lt;/name&gt; &lt;value&gt;org.apache.hadoop.hdfs.server.namenode.ha.ConfiguredFailoverProxyProvider&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.ha.fencing.methods&lt;/name&gt;</span><br><span class="line">&lt;value&gt;sshfence&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.ha.fencing.ssh.private-key-files&lt;/name&gt;</span><br><span class="line">&lt;value&gt;/root/.ssh/id_dsa&lt;/value&gt;</span><br><span class="line">&lt;/property&gt; </span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;dfs.ha.automatic-failover.enabled&lt;/name&gt;</span><br><span class="line">&lt;value&gt;<span class="literal">true</span>&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt; </span><br><span class="line">&lt;name&gt;ha.zookeeper.quorum&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hadoop01:2181,hadoop02:2181,hadoop03:2181&lt;/value&gt; --zookeeper</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><p>(3)配置datanode信息，修改&#x2F;etc&#x2F;hadoop&#x2F;slaves</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hadoop01</span><br><span class="line">hadoop02</span><br><span class="line">hadoop03</span><br></pre></td></tr></table></figure><p>(4)配置yarn，修改mapred-site.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;mapreduce.framework.name&lt;/name&gt;</span><br><span class="line">&lt;value&gt;yarn&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><p>修改yarn-site.xml</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;</span><br><span class="line">&lt;value&gt;mapreduce_shuffle&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br><span class="line">&lt;property&gt;</span><br><span class="line">&lt;name&gt;yarn.resourcemanager.hostname&lt;/name&gt;</span><br><span class="line">&lt;value&gt;hadoop01&lt;/value&gt;</span><br><span class="line">&lt;/property&gt;</span><br></pre></td></tr></table></figure><p>(5)将以上文件进行同步：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp /usr/hadoop-2.10.0/etc/hadoop/* root@hadoop02:/usr/hadoop-2.10.0/etc/hadoop/</span><br><span class="line">scp /usr/hadoop-2.10.0/etc/hadoop/* root@hadoop03:/usr/hadoop-2.10.0/etc/hadoop/</span><br></pre></td></tr></table></figure><p><strong>4.hadoop集群启动</strong></p><p>(1)启动zookeeper集群</p><p>(2)启动各个节点的journalnode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/hadoop-2.10.0/sbin/hadoop-daemon.sh start journalnode</span><br></pre></td></tr></table></figure><p>(3)格式化hadoop01上的namnode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/hadoop-2.10.0/bin/hdfs namenode -format</span><br></pre></td></tr></table></figure><p>(4)启动hadoop01上的namenode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/hadoop-2.10.0/sbin/hadoop-daemon.sh start namenode</span><br></pre></td></tr></table></figure><p>(5)在hadoop02上引导格式化namnode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/hadoop-2.10.0/bin/hdfs namenode -bootstrapStandby</span><br></pre></td></tr></table></figure><p>(6)启动hadoop2上的namnode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/hadoop-2.10.0/sbin/hadoop-daemon.sh start namenode</span><br></pre></td></tr></table></figure><p>(7)注册namenode到zookeeper 只需要在任意一台namenode上执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./hadoop-2.10.0/bin/hdfs zkfc -formatZK</span><br></pre></td></tr></table></figure><p>(8)分别在两个namenode上启动zkfc监视器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./hadoop-2.10.0/sbin/hadoop-daemon.sh start zkfc</span><br></pre></td></tr></table></figure><p>(9)分别在各个节点上启动datanode</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./hadoop-2.10.0/sbin/hadoop-daemon.sh start datanode</span><br></pre></td></tr></table></figure><p>(10)在hadoop01上启动yarn</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./hadoop-2.10.0/sbin/start-yarn.sh</span><br></pre></td></tr></table></figure><p>(11)集群创建完成后以后可以通过快捷方式启动和关闭<br>注意：namenode和ResourceManager必须在同一节点上才能使用start-all.sh</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./hadoop-2.10.0/sbin/start-all.sh</span><br><span class="line">./hadoop-2.10.0/sbin/stop-all.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一-hadoop基本介绍&quot;&gt;&lt;a href=&quot;#一-hadoop基本介绍&quot; class=&quot;headerlink&quot; title=&quot;一.hadoop基本介绍&quot;&gt;&lt;/a&gt;一.hadoop基本介绍&lt;/h2&gt;&lt;p&gt;Hadoop由HDFS、MapReduce、HBase、Hi</summary>
      
    
    
    
    <category term="大数据" scheme="https://root1761.github.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="hadoop" scheme="https://root1761.github.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/hadoop/"/>
    
    
    <category term="linux" scheme="https://root1761.github.io/tags/linux/"/>
    
    <category term="hadoop" scheme="https://root1761.github.io/tags/hadoop/"/>
    
    <category term="java" scheme="https://root1761.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>zookeeper安装使用及集群搭建</title>
    <link href="https://root1761.github.io/2020/07/08/zookeeper%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E5%8F%8A%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
    <id>https://root1761.github.io/2020/07/08/zookeeper%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E5%8F%8A%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</id>
    <published>2020-07-08T14:55:00.000Z</published>
    <updated>2022-08-05T02:24:04.785Z</updated>
    
    <content type="html"><![CDATA[<p>ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。</p><h2 id="1-zookeeper安装"><a href="#1-zookeeper安装" class="headerlink" title="1.zookeeper安装"></a>1.zookeeper安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget https://www.apache.org/dyn/closer.lua/zookeeper/zookeeper-3.6.1/apache-zookeeper-3.6.1-bin.tar.gz</span><br><span class="line">tar -zxvf apache-zookeeper-3.6.1-bin.tar.gz</span><br></pre></td></tr></table></figure><p><strong>1.解压完成后修改配置文件，创建并修改存储数据的目录</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi zoo.cfg</span><br><span class="line">dataDir=/home/zookeeper/zkdata</span><br></pre></td></tr></table></figure><div style="margin:auto;width:70%"><img src="/2020/07/08/zookeeper%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E5%8F%8A%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/zookeeper.png" class></div><p><strong>2.配置完成后，启动zookeeper</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/zkServer.sh start ./conf/zoo.cfg</span><br></pre></td></tr></table></figure><p><strong>3.启动成功后，通过客户端连接zookeeper</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/zkCli.sh -server 10.0.0.1:2181</span><br></pre></td></tr></table></figure><p>zookeeper常用命令：</p><blockquote><p> ls &#x2F;path  : 查看特定节点下面的子节点<br> create &#x2F;path data:  创建一个节点。并给节点绑定数据<br>    注意：  默认是持久性节点<br>create -s &#x2F;parent&#x2F;childPath :在父节点下面创建持久性顺序子节点<br>create -e  &#x2F;path data  :创建临时性节点<br>create -e -s &#x2F;path  data:  创建临时顺序节点<br>get &#x2F;path  :获得节点上绑定的数据信息<br>set&#x2F; path data: 修改节点上绑定的数据。<br>delete &#x2F;path  ：删除节点<br>ls &#x2F;path true:在查看的时候。给节点设置监听： 监听本节点数据的修改和删除。同时监听子节点的添加和删除<br>get &#x2F;path true:  监听本节点数据的修改和删除。同时监听子节点的添加和删除</p></blockquote><h2 id="2-zookeeper分布式集群搭建"><a href="#2-zookeeper分布式集群搭建" class="headerlink" title="2. zookeeper分布式集群搭建"></a>2. zookeeper分布式集群搭建</h2><p> 生产环境下最少3个节点</p><table><thead><tr><th align="center">节点</th><th align="center">IP</th><th align="center">data</th></tr></thead><tbody><tr><td align="center">zookeeper1</td><td align="center">10.0.0.1</td><td align="center">&#x2F;home&#x2F;zookeeper&#x2F;zkdata</td></tr><tr><td align="center">zookeeper2</td><td align="center">10.0.0.2</td><td align="center">&#x2F;home&#x2F;zookeeper&#x2F;zkdata</td></tr><tr><td align="center">zookeeper3</td><td align="center">10.0.0.3</td><td align="center">&#x2F;home&#x2F;zookeeper&#x2F;zkdata</td></tr></tbody></table><p><strong>1.创建存储数据的文件夹</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> zkdata</span><br><span class="line"><span class="built_in">touch</span> ./zkdata/myid</span><br></pre></td></tr></table></figure><p>myid的内容是服务器表示 1|2|3|</p><p><strong>2.修改zookeeper的cfg文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tickTime=2000</span><br><span class="line">dataDir=/home/zookeeper/zkdata</span><br><span class="line">clientPort=2181</span><br><span class="line">initLimit=5</span><br><span class="line">syncLimit=2</span><br><span class="line">server.1=10.0.0.1:2888:3888</span><br><span class="line">server.2=10.0.0.2:2888:3888</span><br><span class="line">server.3=10.0.0.3:2888:3888</span><br></pre></td></tr></table></figure><p>server.X :x为服务器的唯一标识。<br>10.0.0.1：服务器所在的ip地址<br>2888：数据同步使用的端口号<br>3888：选举使用的端口号</p><p><strong>3.分别启动zookeeper</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/zkServer.sh start ./conf/zoo.cfg</span><br></pre></td></tr></table></figure><p>查看zookeeper的状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./bin/zkServer.sh status ./conf/zoo.cfg</span><br></pre></td></tr></table></figure><p><strong>4.任意连接一个zookeeper操作</strong></p><h2 id="3-zookeeper开机自启动脚本"><a href="#3-zookeeper开机自启动脚本" class="headerlink" title="3.zookeeper开机自启动脚本"></a>3.zookeeper开机自启动脚本</h2><p>进入到&#x2F;etc&#x2F;init.d&#x2F;目录下，创建zookeeper文件，复制以下内容：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#chkconfig:2345 20 90</span></span><br><span class="line"><span class="comment">#description:zookeeper</span></span><br><span class="line"><span class="comment">#processname:zookeeper</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.252.b09-2.el7_8.x86_64/jre/</span><br><span class="line"><span class="keyword">case</span> <span class="variable">$1</span> <span class="keyword">in</span></span><br><span class="line">          start) su root /home/zookeeper/bin/zkServer.sh start;;</span><br><span class="line">          stop) su root /home/zookeeper/bin/zkServer.sh stop;;</span><br><span class="line">          status) su root /home/zookeeper/bin/zkServer.sh status;;</span><br><span class="line">          restart) su root /home/zookeeper/bin/zkServer.sh restart;;</span><br><span class="line">          *)  <span class="built_in">echo</span> <span class="string">&quot;require start|stop|status|restart&quot;</span>  ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure><p>权限管理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> a+x zookeeper</span><br><span class="line">chkconfig --add zookeeper</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ZooKeeper是一个分布式的，开放源码的分布式应用程序协调服务，是Google的Chubby一个开源的实现，是Hadoop和Hbase的重要组件。它是一个为分布式应用提供一致性服务的软件，提供的功能包括：配置维护、域名服务、分布式同步、组服务等。&lt;/p&gt;
&lt;h2 id=</summary>
      
    
    
    
    <category term="大数据" scheme="https://root1761.github.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    <category term="zookeeper" scheme="https://root1761.github.io/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/zookeeper/"/>
    
    
    <category term="linux" scheme="https://root1761.github.io/tags/linux/"/>
    
    <category term="zookeeper" scheme="https://root1761.github.io/tags/zookeeper/"/>
    
  </entry>
  
  <entry>
    <title>minio安装及集群搭建</title>
    <link href="https://root1761.github.io/2020/05/28/minio%E5%AE%89%E8%A3%85%E5%8F%8A%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/"/>
    <id>https://root1761.github.io/2020/05/28/minio%E5%AE%89%E8%A3%85%E5%8F%8A%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/</id>
    <published>2020-05-28T12:25:00.000Z</published>
    <updated>2022-08-05T02:30:31.946Z</updated>
    
    <content type="html"><![CDATA[<p>Minio 是一个基于Go语言的对象存储服务。它实现了大部分亚马逊S3云存储服务接口，可以看做是是S3的开源版本，非常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器&#x2F;虚拟机镜像等，而一个对象文件可以是任意大小，从几kb到最大5T不等。</p><table><thead><tr><th align="center">项目</th><th align="center">参数</th></tr></thead><tbody><tr><td align="center">最大驱动器数量</td><td align="center">16</td></tr><tr><td align="center">最小驱动器数量</td><td align="center">4</td></tr><tr><td align="center">读仲裁</td><td align="center">n&#x2F;2</td></tr><tr><td align="center">写仲裁</td><td align="center">n&#x2F;2+1</td></tr><tr><td align="center">最大桶数</td><td align="center">无限制</td></tr><tr><td align="center">每桶最大对象数</td><td align="center">无限制</td></tr><tr><td align="center">最大对象大小</td><td align="center">5TB</td></tr><tr><td align="center">最小对象大小</td><td align="center">0</td></tr><tr><td align="center">每次 PUT 操作的最大对象大小</td><td align="center">5GB</td></tr><tr><td align="center">每次上传的最大 Part 数量</td><td align="center">10000</td></tr><tr><td align="center">Part 大小</td><td align="center">5MB到5GB. 最后一个part可以从0B到5GB</td></tr><tr><td align="center">每次list parts请求可返回的part最大数量</td><td align="center">1000</td></tr><tr><td align="center">每次list objects请求可返回的object最大数量</td><td align="center">1000</td></tr><tr><td align="center">每次list multipart uploads请求可返回的multipart uploads最大数量</td><td align="center">1000</td></tr></tbody></table><h2 id="一-minio基本原理"><a href="#一-minio基本原理" class="headerlink" title="一.minio基本原理"></a>一.minio基本原理</h2><p><strong>1.minio基本特点</strong></p><blockquote><p><strong>高性能</strong>：作为高性能对象存储，在标准硬件条件下它能达到55GB&#x2F;s的读、35GG&#x2F;s的写速率<br><strong>可扩容</strong>：不同MinIO集群可以组成联邦，并形成一个全局的命名空间，并跨越多个数据中心<br><strong>云原生</strong>：容器化、基于K8S的编排、多租户支持<br><strong>Amazon S3兼容</strong>：Minio使用Amazon S3 v2 &#x2F; v4 API。可以使用Minio SDK，Minio Client，AWS SDK和AWS CLI访问Minio服务器。<br><strong>可对接后端存储</strong>: 除了Minio自己的文件系统，还支持DAS、 JBODs、NAS、Google云存储和Azure Blob存储。<br><strong>SDK支持</strong>: 基于Minio轻量的特点，它得到类似Java、Python或Go等语言的sdk支持<br><strong>Lambda计算</strong>: Minio服务器通过其兼容AWS SNS &#x2F; SQS的事件通知服务触发Lambda功能。支持的目标是消息队列，如Kafka，NATS，AMQP，MQTT，Webhooks以及Elasticsearch，Redis，Postgres和MySQL等数据库。<br><strong>有操作页面</strong><br><strong>功能简单</strong>: 这一设计原则让MinIO不容易出错、更快启动<br><strong>支持纠删码</strong>：MinIO使用纠删码、Checksum来防止硬件错误和静默数据污染。在最高冗余度配置下，即使丢失1&#x2F;2的磁盘也能恢复数据</p></blockquote><p><strong>2.minio的存储机制</strong></p><p>Minio使用纠删码erasure code和校验和checksum来保护数据免受硬件故障和无声数据损坏。 即便丢失一半数量（N&#x2F;2）的硬盘，仍然可以恢复数据。</p><p><strong>3.minio的纠删码</strong></p><p>纠删码是一种恢复丢失和损坏数据的数学算法，目前，纠删码技术在分布式存储系统中的应用主要有三类，阵列纠删码（Array Code: RAID5、RAID6 等）、RS(Reed-Solomon)里德-所罗门类纠删码和 LDPC(LowDensity Parity Check Code)低密度奇偶校验纠删码。Erasure Code 是一种编码技术，它可以将 n 份原始数据，增加 m 份数据，并能通过 n+m 份中的任意 n 份数据，还原为原始数据。即如果有任意小于等于 m 份的数据失效，仍然能通过剩下的数据还原出来</p><p><strong>4.minio的擦除代码</strong></p><p>MinIO 使用每个对象的内联擦除编码来保护数据，这种编码是用汇编代码编写的，可以提供尽可能高的性能。MinIO 使用 Reed-Solomon 代码将对象条带化为 n&#x2F;2 数据和 n&#x2F;2 奇偶校验块——尽管这些可以配置为任何所需的冗余级别。这意味着在 12 个驱动器设置中，一个对象被分割为 6 个数据和 6 个奇偶校验块。即使您丢失了 5 个(n&#x2F;2) -1 个驱动器，无论是奇偶校验还是数据，您仍然可以从剩余驱动器可靠地重构数据。MinIO 的实现确保即使多个设备丢失或不可用，也可以读取对象或写入新对象。最后，MinIO 的擦除代码在对象级别，可以一次治愈一个对象。</p><h2 id="二-minio安装"><a href="#二-minio安装" class="headerlink" title="二.minio安装"></a>二.minio安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">wget https://dl.min.io/server/minio/release/linux-amd64/minio</span><br><span class="line"><span class="built_in">chmod</span> +x minio</span><br><span class="line">./minio server /data</span><br></pre></td></tr></table></figure><p>后台运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">nohup</span> /usr/local/bin/minio server  /home/minio/data &gt; /home/minio/data/minio.log 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure><p>minio默认端口9000，直接访问ip:9000,如图：</p><div style="width:70%;margin:auto"><img src="/2020/05/28/minio%E5%AE%89%E8%A3%85%E5%8F%8A%E9%9B%86%E7%BE%A4%E6%90%AD%E5%BB%BA/minio1.png" class></div><h2 id="三-minio使用"><a href="#三-minio使用" class="headerlink" title="三.minio使用"></a>三.minio使用</h2><p>引入minio客户端jar包</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">    &lt;groupId&gt;io.minio&lt;/groupId&gt;</span><br><span class="line">    &lt;artifactId&gt;minio&lt;/artifactId&gt;</span><br><span class="line">    &lt;version&gt;<span class="number">7.0</span><span class="number">.2</span>&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><blockquote><p>minio相关的代码及具体使用：</p><footer><strong>访问——</strong><cite><a href="https://github.com/root1761/bigdata/tree/main/minio">minio</a></cite></footer></blockquote><h2 id="四-minio分布式集群搭建"><a href="#四-minio分布式集群搭建" class="headerlink" title="四. minio分布式集群搭建"></a>四. minio分布式集群搭建</h2><p>生产环境下最少4个节点</p><table><thead><tr><th align="center">节点</th><th align="center">IP</th><th align="center">data</th></tr></thead><tbody><tr><td align="center">minio1</td><td align="center">10.0.0.1</td><td align="center">&#x2F;home&#x2F;minio&#x2F;data</td></tr><tr><td align="center">minio2</td><td align="center">10.0.0.2</td><td align="center">&#x2F;home&#x2F;minio&#x2F;data</td></tr><tr><td align="center">minio3</td><td align="center">10.0.0.3</td><td align="center">&#x2F;home&#x2F;minio&#x2F;data</td></tr><tr><td align="center">minio4</td><td align="center">10.0.0.4</td><td align="center">&#x2F;home&#x2F;minio&#x2F;data</td></tr></tbody></table><p>1.初始化ACCESS KEY 和SECRET KEY</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> MINIO_ACCESS_KEY=admin</span><br><span class="line"><span class="built_in">export</span> MINIO_SECRET_KEY=admin1234</span><br></pre></td></tr></table></figure><p>2.搭建minio</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./minio server --address :9000 http://10.0.0.1/home/minio/data \</span><br><span class="line">                               http://10.0.0.2/home/minio/data \</span><br><span class="line">                               http://10.0.0.3/home/minio/data \</span><br><span class="line">                               http://10.0.0.4/home/minio/data \</span><br></pre></td></tr></table></figure><p>注意：minio搭建机器时间差距不能过大，使用以下指令查看和修改当前系统时间:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">date</span></span><br><span class="line"><span class="built_in">date</span> -s <span class="string">&#x27;2020-06-11 21:02:00&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="五-脚本启动minio"><a href="#五-脚本启动minio" class="headerlink" title="五.脚本启动minio"></a>五.脚本启动minio</h2><p><strong>1.创建run.sh 文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">touch</span> run.sh</span><br></pre></td></tr></table></figure><p><strong>2.编辑run.sh 文件</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> MINIO_CACHE=<span class="string">&quot;on&quot;</span></span><br><span class="line"><span class="built_in">export</span> MINIO_CACHE_DRIVES=<span class="string">&quot;http://10.0.0.1/home/minio/data,http://10.0.0.2/home/minio/data,http://10.0.0.3/home/minio/data,http://10.0.0.4/home/minio/data&quot;</span></span><br><span class="line"><span class="built_in">export</span> MINIO_CACHE_QUOTA=80</span><br><span class="line"><span class="built_in">export</span> MINIO_CACHE_AFTER=3</span><br><span class="line"><span class="built_in">export</span> MINIO_CACHE_WATERMARK_LOW=70</span><br><span class="line"><span class="built_in">export</span> MINIO_CACHE_WATERMARK_HIGH=90</span><br><span class="line"><span class="built_in">export</span> MINIO_ACCESS_KEY=admin</span><br><span class="line"><span class="built_in">export</span> MINIO_SECRET_KEY=admin1234</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> a+x /hom/minio/data</span><br><span class="line"></span><br><span class="line">./minio server --address :9000 \</span><br><span class="line">http://10.0.0.1/home/minio/data \</span><br><span class="line">http://10.0.0.2/home/minio/data \</span><br><span class="line">http://10.0.0.3/home/minio/data \</span><br><span class="line">http://10.0.0.4/home/minio/data \</span><br></pre></td></tr></table></figure><p><strong>3.minio.service</strong><br>WorkingDirectory:二进制文件<br>ExecStart:集群启动脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> &gt; /usr/lib/systemd/system/minio.service &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">[Unit]</span></span><br><span class="line"><span class="string">Description=Minio service</span></span><br><span class="line"><span class="string">Documentation=https://docs.minio.io/</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Service]</span></span><br><span class="line"><span class="string">WorkingDirectory=/home/minio/</span></span><br><span class="line"><span class="string">ExecStart=/home/minio/run.sh</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Restart=on-failure</span></span><br><span class="line"><span class="string">RestartSec=5</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[Install]</span></span><br><span class="line"><span class="string">WantedBy=multi-user.target</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p><strong>4.权限管理</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x data &amp;&amp; <span class="built_in">chmod</span> +x run.sh</span><br><span class="line"><span class="built_in">chmod</span> +x /usr/lib/systemd/system/minio.service</span><br></pre></td></tr></table></figure><p><strong>5.启动minio</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start minio</span><br></pre></td></tr></table></figure><p>开机自启动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> minio.service </span><br></pre></td></tr></table></figure><h2 id="六-nginx动态代理"><a href="#六-nginx动态代理" class="headerlink" title="六.nginx动态代理"></a>六.nginx动态代理</h2><p>修改nginx的conf文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">upstream http_minio &#123;</span><br><span class="line">    server 10.0.0.1:9000 weight=25 max_fails=2 fail_timeout=30s;</span><br><span class="line">    server 10.0.0.2:9000 weight=25 max_fails=2 fail_timeout=30s;</span><br><span class="line">    server 10.0.0.3:9000 weight=25 max_fails=2 fail_timeout=30s;</span><br><span class="line">    server 10.0.0.4:9000 weight=25 max_fails=2 fail_timeout=30s;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server&#123;</span><br><span class="line">    listen       9001;</span><br><span class="line">    server_name  10.0.0.1;</span><br><span class="line"></span><br><span class="line">    ignore_invalid_headers off;</span><br><span class="line">    client_max_body_size 0;</span><br><span class="line">    proxy_buffering off;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_set_header   X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line">        proxy_set_header   X-Forwarded-Host  <span class="variable">$host</span>:<span class="variable">$server_port</span>;</span><br><span class="line">        proxy_set_header   X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">        proxy_set_header   X-Forwarded-Proto  <span class="variable">$http_x_forwarded_proto</span>;</span><br><span class="line">        proxy_set_header   Host <span class="variable">$http_host</span>;</span><br><span class="line"></span><br><span class="line">        proxy_connect_timeout 300;</span><br><span class="line">        proxy_http_version 1.1;</span><br><span class="line">        chunked_transfer_encoding off;</span><br><span class="line">        proxy_ignore_client_abort on;</span><br><span class="line"></span><br><span class="line">        proxy_pass http://http_minio;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入sbin目录下重启nginx即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./nginx -s reload</span><br></pre></td></tr></table></figure><p>访问10.0.0.1:9001</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Minio 是一个基于Go语言的对象存储服务。它实现了大部分亚马逊S3云存储服务接口，可以看做是是S3的开源版本，非常适合于存储大容量非结构化的数据，例如图片、视频、日志文件、备份数据和容器&amp;#x2F;虚拟机镜像等，而一个对象文件可以是任意大小，从几kb到最大5T不等。&lt;/</summary>
      
    
    
    
    <category term="微服务" scheme="https://root1761.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
    <category term="minio" scheme="https://root1761.github.io/categories/%E5%BE%AE%E6%9C%8D%E5%8A%A1/minio/"/>
    
    
    <category term="linux" scheme="https://root1761.github.io/tags/linux/"/>
    
    <category term="java" scheme="https://root1761.github.io/tags/java/"/>
    
    <category term="minio" scheme="https://root1761.github.io/tags/minio/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客主题yilia集成utterances评论</title>
    <link href="https://root1761.github.io/2020/05/08/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98yilia%E9%9B%86%E6%88%90utterances%E8%AF%84%E8%AE%BA/"/>
    <id>https://root1761.github.io/2020/05/08/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98yilia%E9%9B%86%E6%88%90utterances%E8%AF%84%E8%AE%BA/</id>
    <published>2020-05-08T13:05:00.000Z</published>
    <updated>2022-08-05T02:51:30.619Z</updated>
    
    <content type="html"><![CDATA[<p>utterances 是一款基于 GitHub issues 的评论工具。</p><p>相比同类的工具 gitment、gitalk 以及 disqus 评论工具，优点如下：</p><blockquote><p>1.极其轻量<br>2.加载非常快<br>3.配置比较简单</p></blockquote><h2 id="1-utterances-安装"><a href="#1-utterances-安装" class="headerlink" title="1.utterances 安装"></a>1.utterances 安装</h2><p>github 安装地址：<a href="https://github.com/apps/utterances">https://github.com/apps/utterances</a><br><br>首先安装这个 App ，选择要关联评论的仓库。可以选择所有仓库，也可以只选择一个仓库。选择一个仓库比较安全</p><div style="width:50%;margin:auto"><img src="/2020/05/08/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98yilia%E9%9B%86%E6%88%90utterances%E8%AF%84%E8%AE%BA/utterancesInstall.png" class></div><h2 id="2-utterances-使用"><a href="#2-utterances-使用" class="headerlink" title="2.utterances 使用"></a>2.utterances 使用</h2><p>在themes&#x2F;yilia&#x2F;layout&#x2F;_partial&#x2F;article.ejs下添加以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 《utteranc评论：基于github issue的评论系统 --&gt;</span><br><span class="line">&lt;% <span class="keyword">if</span> (theme.utterance &amp;&amp; theme.utterance.enable)&#123; %&gt;</span><br><span class="line">    &lt;section <span class="built_in">id</span>=<span class="string">&quot;comments&quot;</span> class=<span class="string">&quot;comments&quot;</span>&gt;</span><br><span class="line">      &lt;style&gt;</span><br><span class="line">        .utterances&#123;max-width: 100%;&#125;</span><br><span class="line">      &lt;/style&gt;</span><br><span class="line">        &lt;script src=<span class="string">&quot;https://utteranc.es/client.js&quot;</span></span><br><span class="line">                repo=<span class="string">&quot;&lt;%= theme.utterance.repo %&gt;&quot;</span></span><br><span class="line">                issue-term=<span class="string">&quot;&lt;%= theme.utterance.issue_term %&gt;&quot;</span></span><br><span class="line">                theme=<span class="string">&quot;&lt;%= theme.utterance.theme %&gt;&quot;</span></span><br><span class="line">                crossorigin=<span class="string">&quot;anonymous&quot;</span></span><br><span class="line">                async&gt;</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">  &lt;/section&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br><span class="line">&lt;!-- utteranc评论》 --&gt;</span><br></pre></td></tr></table></figure><h2 id="3-utterances配置"><a href="#3-utterances配置" class="headerlink" title="3.utterances配置"></a>3.utterances配置</h2><p>在themes&#x2F;yilia&#x2F;_config下添加以下代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#6.utteranc评论： https://utteranc.es (参数配置详见主页)</span></span><br><span class="line">utterance:</span><br><span class="line">  <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">  repo: root1761/root1761.github.io     <span class="comment">#仓库名字,格式：你的用户ID/仓库名称，如：blog/utterance_repo</span></span><br><span class="line">  issue_term: <span class="string">&#x27;title&#x27;</span>            <span class="comment">#映射配置</span></span><br><span class="line">  theme: github-light         <span class="comment">#主题</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>enable：true使用utterances评论false关闭</strong><br><strong>repo： 你的用户ID&#x2F;仓库名称，如：blog&#x2F;utterance_repo</strong><br><strong>issue_term：映射配置,有如下选项：</strong></p><ol><li>pathname</li><li>url</li><li>title</li><li>og:title</li><li>issue-number</li><li>specific-term</li></ol><hr><p><strong>theme：主题,有如下选项：</strong></p><ol><li>github-light</li><li>github-dark</li><li>github-dark-orange</li><li>icy-dark</li><li>dark-blue</li><li>photon-dark</li></ol></blockquote><h2 id="4-utterances"><a href="#4-utterances" class="headerlink" title="4.utterances"></a>4.utterances</h2><p>显示如下效果,说明配置成功</p><p><img src="/utterancesSuccess.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;utterances 是一款基于 GitHub issues 的评论工具。&lt;/p&gt;
&lt;p&gt;相比同类的工具 gitment、gitalk 以及 disqus 评论工具，优点如下：&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;1.极其轻量&lt;br&gt;2.加载非常快&lt;br&gt;3.配置比较简单</summary>
      
    
    
    
    <category term="git" scheme="https://root1761.github.io/categories/git/"/>
    
    <category term="utterances" scheme="https://root1761.github.io/categories/git/utterances/"/>
    
    
    <category term="hexo" scheme="https://root1761.github.io/tags/hexo/"/>
    
    <category term="git" scheme="https://root1761.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客主题yilia集成Gitment评论</title>
    <link href="https://root1761.github.io/2020/05/05/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98yilia%E9%9B%86%E6%88%90Gitment%E8%AF%84%E8%AE%BA/"/>
    <id>https://root1761.github.io/2020/05/05/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98yilia%E9%9B%86%E6%88%90Gitment%E8%AF%84%E8%AE%BA/</id>
    <published>2020-05-05T12:56:00.000Z</published>
    <updated>2022-08-05T03:06:51.629Z</updated>
    
    <content type="html"><![CDATA[<p>1.博客目录下使用npm下载gitment插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save gitment</span><br></pre></td></tr></table></figure><p>2.git注册OAuth Application<br>地址:登陆git——&gt;点击头像——&gt;settings——&gt;Developer settings ——&gt;OAuth Apps——&gt;New OAuth App</p><blockquote><p>Application name: 应用名<br>Homepage URL: 应用程序主页的完整URL<br>Application description: 应用说明<br>Authoriztion callback URL: 授权回调URL</p></blockquote><div style="width:50%;margin:auto"><img src="/2020/05/05/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98yilia%E9%9B%86%E6%88%90Gitment%E8%AF%84%E8%AE%BA/OAuth.png" class></div>3.修改hexo主题yilia的_config配置<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">gitment_owner: root1761      <span class="comment">#你的 GitHub ID</span></span><br><span class="line">gitment_repo: <span class="string">&#x27;root1761.github.io&#x27;</span>          <span class="comment">#存储评论的 repo</span></span><br><span class="line">gitment_oauth:</span><br><span class="line">  client_id: <span class="string">&#x27;&#x27;</span>           <span class="comment">#client ID</span></span><br><span class="line">  client_secret: <span class="string">&#x27;&#x27;</span>       <span class="comment">#client secret</span></span><br></pre></td></tr></table></figure><div style="width:50%;margin:auto"><img src="/2020/05/05/Hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98yilia%E9%9B%86%E6%88%90Gitment%E8%AF%84%E8%AE%BA/clientId.png" class></div><p>4.重新编译运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;1.博客目录下使用npm下载gitment插件&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;</summary>
      
    
    
    
    <category term="git" scheme="https://root1761.github.io/categories/git/"/>
    
    <category term="Gitment" scheme="https://root1761.github.io/categories/git/Gitment/"/>
    
    
    <category term="hexo" scheme="https://root1761.github.io/tags/hexo/"/>
    
    <category term="git" scheme="https://root1761.github.io/tags/git/"/>
    
  </entry>
  
</feed>
